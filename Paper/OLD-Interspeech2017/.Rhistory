png(paste(plot.path, "chiage-BvsM.png", sep=""),
width=1000, height=400,units="px", bg = "transparent")
print(bvsm.effects)
dev.off()
# Model:
# humanOK.subset.bvsm <-	humanOK.subset %>%
# filter(Corpus == "Bergelson"|
# Corpus == "McDivitt")
# bvsm.model.fullrand <-	glmer(CDS_yes ~ AgeMonthsC * Corpus +
# (1|Corpus/ID), data=humanOK.subset.bvsm,
# family="binomial", control = glmerControl(optimizer="bobyqa"))
#-- Discussion --------------------------------------------------------
#   MC-comment:	No obvious differences in proportion CDS given binary
#				post-secondary education of caregiver (adu_univ) or
#				corpora with known SES differences
#
#				Model findings:
#				<increase in CDS with age; nothing else>
#
#   EB-comment:	yeah, nada! we should look for effects by-corpus
#				though... may be a confound where my moms are more
#				educated than teenage moms in melanie's
#----------------------------------------------------------------------
#----------------------------------------------------------------------
# What is the effect of SES on speech overall?
age.education.totals.indiv <-	xdsall.t2 %>%
filter(label_m == "CDS" |label_m == "ADS") %>%
filter(adu_gender_m != "NMJ") %>%
group_by(AgeMonths, adu_univ, Corpus, ID) %>%
summarise(sp.total = n()) %>%
arrange(AgeMonths, adu_univ, Corpus, ID) %>%
as.data.table()
age.education.totals.indiv[, adu_univ2 := factor(adu_univ,
labels=c("No university", "University"))]
# Summary table too big to show here, so plotted instead:
# see indiv-raw-num-tokens.png
indivs.effects <- ggplot(age.education.totals.indiv,
aes(x=AgeMonths, y=sp.total)) +
geom_smooth(method="lm", se=T,
aes(color=factor(Corpus), fill = factor(Corpus)), show.legend=F) +
geom_point(aes(color=factor(Corpus)), size=8) +
facet_grid(. ~ adu_univ2) +
scale_fill_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
scale_color_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
ylim(0,500) + xlim(0,20) +
labs(x = "Age (months)", y = "N tokens\n",
color = "Corpus") +
guides(colour = guide_legend(order =1, override.aes = list(size=10)),
fill = F) +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.1, 0.7))
png(paste(plot.path, "indiv-raw-num-tokens-univ.png", sep=""),
width=1400, height=400,units="px", bg = "transparent")
print(indivs.effects)
dev.off()
# And on CDS only?
age.education.totals.indiv.cds <-	xdsall.t2 %>%
filter(label_m == "CDS") %>%
filter(adu_gender_m != "NMJ") %>%
group_by(AgeMonths, adu_univ, Corpus, ID) %>%
summarise(sp.total = n()) %>%
arrange(AgeMonths, adu_univ, Corpus, ID) %>%
filter(ID != "B-30") %>% # outlier > 3*mean # CDS tokens
as.data.table()
age.education.totals.indiv.cds[, adu_univ2 := factor(adu_univ,
labels=c("No university", "University"))]
# Summary table too big to show here, so plotted instead:
# see indiv-raw-num-tokens-CDS.png
indivs.effects.cds <- ggplot(age.education.totals.indiv.cds,
aes(x=AgeMonths, y=sp.total)) +
geom_smooth(method="lm", se=T,
aes(color=factor(Corpus), fill = factor(Corpus)), show.legend=F) +
geom_point(aes(color=factor(Corpus)), size=8) +
facet_grid(. ~ adu_univ2) +
scale_fill_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
scale_color_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
ylim(0,500) + xlim(0,20) +
labs(x = "Age (months)", y = "N tokens CDS\n",
color = "Corpus") +
guides(colour = guide_legend(order =1, override.aes = list(size=10)),
fill = F) +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.1, 0.7))
png(paste(plot.path, "indiv-raw-num-tokens-CDS-univ.png", sep=""),
width=1400, height=400,units="px", bg = "transparent")
print(indivs.effects.cds)
dev.off()
# Now one with a smaller y-axis
indivs.effects.cds.miniy <- ggplot(age.education.totals.indiv.cds,
aes(x=AgeMonths, y=sp.total)) +
geom_smooth(method="lm", se=T,
aes(color=factor(Corpus), fill = factor(Corpus)), show.legend=F) +
geom_point(aes(color=factor(Corpus)), size=8) +
facet_grid(. ~ adu_univ2) +
scale_fill_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
scale_color_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
ylim(0,300) + xlim(0,20) +
labs(x = "Age (months)", y = "N tokens CDS\n",
color = "Corpus") +
guides(colour = guide_legend(order =1, override.aes = list(size=10)),
fill = F) +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.1, 0.7))
png(paste(plot.path, "indiv-raw-num-tokens-CDS-univ-small-y.png", sep=""),
width=1400, height=400,units="px", bg = "transparent")
print(indivs.effects.cds.miniy)
dev.off()
#  shape figure4 ------------------------------------------------------
#eb couldn't deal with greyscale, just changed shape
shapeindivs.effects.cds.miniy <- ggplot(age.education.totals.indiv.cds,
aes(x=AgeMonths, y=sp.total)) +
geom_smooth(method="lm", se=T,
aes(color=factor(Corpus), fill = factor(Corpus), linetype= factor(Corpus)), show.legend=F) +
geom_point(aes(color=factor(Corpus), shape = factor(Corpus)), size=8) +
facet_grid(. ~ adu_univ2) +
scale_fill_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
scale_color_manual(
labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c("firebrick1", "gold1", "forestgreen", "dodgerblue1")) +
scale_shape_manual(labels=c("Bergelson", "McDivitt", "VanDam", "Warlaumont"),
values=c(0,18,8,16))+
ylim(0,300) + xlim(0,20) +
labs(x = "Age (months)", y = "N tokens CDS\n",
color = "Corpus", shape = "Corpus") +
guides(colour = guide_legend(order = 1, override.aes = list(size=10)),
fill = "none",
shape = guide_legend(order = 1)) +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.1, 0.7))
ggsave(plot = shapeindivs.effects.cds.miniy,
filename = "shapeindiv-raw-num-tokens-CDS-univ-small-y.png",
#"png",
path = plot.path,
width = 49.39,
height = 14.11,
units = "cm",dpi = 72,
bg = "transparent"
)
# Model of all speech:
age.education.totals.indiv.2 <-	age.education.totals.indiv %>%
mutate(AgeMonthsC = round(AgeMonths-mean(AgeMonths), 2)) %>%
as.data.table()
sp.quant.by.corpora <-	lmer(sp.total ~ AgeMonthsC * adu_univ +
(1|Corpus), data=age.education.totals.indiv.2)
# Should I somehow normalize the total speech tokens?
# Nah... the residuals look okay
#resid(sp.quant.by.corpora)
#plot(density(resid(sp.quant.by.corpora)))
#qqnorm(resid(sp.quant.by.corpora))
#qqline(resid(sp.quant.by.corpora))
# Output:
# REML criterion at convergence: 682.3
# Scaled residuals:
# Min       1Q   Median       3Q      Max
# -2.00285 -0.71050 -0.03296  0.49545  3.13852
# Random effects:
# Groups   Name        Variance Std.Dev.
# Corpus   (Intercept)    0      0.00
# Residual             6613     81.32
# Number of obs: 61, groups:  Corpus, 4
# Fixed effects:
# Estimate Std. Error t value
# (Intercept)             104.349     20.011   5.214
# AgeMonthsC                2.024      4.792   0.422
# adu_univyes              94.368     23.580   4.002
# AgeMonthsC:adu_univyes  -20.444      5.490  -3.724
# Correlation of Fixed Effects:
# (Intr) AgMntC ad_nvy
# AgeMonthsC  -0.287
# adu_univyes -0.849  0.244
# AgMnthsC:d_  0.251 -0.873 -0.185
# Model of CDS:
age.education.totals.indiv.cds.2 <-	age.education.totals.indiv.cds %>%
mutate(AgeMonthsC = round(AgeMonths-mean(AgeMonths), 2),
log.sp.total = log(sp.total)) %>%
as.data.table()
cds.quant.by.corpora <- lmer(sp.total ~ AgeMonthsC * adu_univ +
(1|Corpus), data=age.education.totals.indiv.cds.2)
cds.quant.by.corpora.log <- lmer(log.sp.total ~ AgeMonthsC * adu_univ +
(1|Corpus), data=age.education.totals.indiv.cds.2)
# Should I somehow normalize the total CDS tokens?
# Residuals don't look as good as for all speech tokens
# resid(cds.quant.by.corpora)
# plot(density(resid(cds.quant.by.corpora)))
# qqnorm(resid(cds.quant.by.corpora))
# qqline(resid(cds.quant.by.corpora))
# ... but simple logging doesn't make things much better
# resid(cds.quant.by.corpora.log)
# plot(density(resid(cds.quant.by.corpora.log)))
# qqnorm(resid(cds.quant.by.corpora.log))
# qqline(resid(cds.quant.by.corpora.log))
# ... so I'll ignore this for now.
# Output:
# REML criterion at convergence: 621.9
# Scaled residuals:
# Min      1Q  Median      3Q     Max
# -1.5017 -0.6143 -0.1054  0.4550  2.6113
# Random effects:
# Groups   Name        Variance Std.Dev.
# Corpus   (Intercept)    0      0.00
# Residual             2767     52.61
# Number of obs: 60, groups:  Corpus, 4
# Fixed effects:
# Estimate Std. Error t value
# (Intercept)              67.831     12.991   5.222
# AgeMonthsC                4.135      3.100   1.334
# adu_univyes              46.544     15.347   3.033
# AgeMonthsC:adu_univyes  -11.348      3.558  -3.189
# Correlation of Fixed Effects:
# (Intr) AgMntC ad_nvy
# AgeMonthsC  -0.298
# adu_univyes -0.846  0.252
# AgMnthsC:d_  0.260 -0.871 -0.190
#-- Discussion --------------------------------------------------------
#   MC-comment:	Large differences in raw amount of speech and raw
#				amount of CDS by education, with change across child
#				age, most strikingly for families with caregivesrs
#				who have a university degree (decreasing the # of
#				tokens overall)
#
#				Model findings (in both cases):
#				a - more tokens overall from university-edu families
#				b - big decrease with age in university-edu families
#
#				This makes for a somewhat complicated story given the
#				non-differences found across these groups for SES.
#				Though a major caveat is the age * SES sampling
#				across corpora.
#
#----------------------------------------------------------------------
#----------------------------------------------------------------------
# What is the effect of age, chigender, and adugender on speech overall?
agg.totals.indiv <-	xdsall.t2 %>%
filter(label_m == "CDS" |label_m == "ADS") %>%
filter(adu_gender_m != "NMJ") %>%
group_by(AgeMonths, adu_gender_m, chi_gender, ID, Corpus) %>%
summarise(sp.total = n()) %>%
arrange(AgeMonths, adu_gender_m, chi_gender, ID, Corpus) %>%
as.data.table()
agg.totals.indiv[, chig2 := factor(chi_gender, labels=c("Girl", "Boy"))]
agg.totals.indiv[, adug2 := factor(adu_gender_m, labels=c("Woman", "Man"))]
# Summary table too big to show here, so plotted instead:
# see indiv-raw-num-tokens-CDS.png
indivs.effects.agg <- ggplot(agg.totals.indiv,
aes(x=AgeMonths, y=sp.total)) +
geom_smooth(method="lm", se=T,
aes(color=factor(adug2), fill = factor(adug2)), show.legend=F) +
geom_point(aes(color=factor(adug2)), size=8) +
facet_grid(. ~ chig2) +
scale_fill_manual(
values=c("maroon", "mediumblue")) +
scale_color_manual(
values=c("maroon", "mediumblue")) +
ylim(0,500) + xlim(0,20) +
labs(x = "Age (months)", y = "N tokens\n",
color = "Adult speaker") +
guides(colour = guide_legend(order =1, override.aes = list(size=10)),
fill = F) +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.1, 0.8))
png(paste(plot.path, "indiv-raw-num-tokens-agg.png", sep=""),
width=1400, height=400,units="px", bg = "transparent")
print(indivs.effects.agg)
dev.off()
# Model of all speech:
agg.totals.indiv.2 <-	agg.totals.indiv %>%
mutate(AgeMonthsC = round(AgeMonths-mean(AgeMonths), 2)) %>%
as.data.table()
sp.quant.agg <-	lmer(sp.total ~ AgeMonthsC * chi_gender * adu_gender_m +
(1|Corpus/ID), data=agg.totals.indiv.2)
# Should I somehow normalize the total speech tokens?
# Residuals are okayish
#resid(sp.quant.agg)
#plot(density(resid(sp.quant.agg)))
#qqnorm(resid(sp.quant.agg))
#qqline(resid(sp.quant.agg))
# Output:
# REML criterion at convergence: 1256.7
# Scaled residuals:
# Min      1Q  Median      3Q     Max
# -2.4133 -0.5779 -0.1919  0.5853  3.7289
# Random effects:
# Groups    Name        Variance Std.Dev.
# ID:Corpus (Intercept)    0.00   0.00
# Corpus    (Intercept)   87.98   9.38
# Residual              5696.14  75.47
# Number of obs: 114, groups:  ID:Corpus, 61; Corpus, 4
# Fixed effects:
# Estimate Std. Error t value
# (Intercept)                                 114.925     15.455   7.436
# AgeMonthsC                                   -5.652      3.276  -1.726
# chi_gendermale                               33.233     19.429   1.710
# adu_gender_mMALE                            -66.882     21.115  -3.167
# AgeMonthsC:chi_gendermale                    -7.419      4.331  -1.713
# AgeMonthsC:adu_gender_mMALE                   2.811      5.007   0.561
# chi_gendermale:adu_gender_mMALE             -29.009     28.543  -1.016
# AgeMonthsC:chi_gendermale:adu_gender_mMALE    4.892      6.454   0.758
# Correlation of Fixed Effects:
# (Intr) AgMntC ch_gnd a__MAL AgMC:_ AMC:__ c_:__M
# AgeMonthsC  -0.059
# chi_gendrml -0.662  0.064
# ad_gnd_MALE -0.605  0.060  0.484
# AgMnthsC:c_  0.067 -0.745 -0.047 -0.046
# AgMC:__MALE  0.056 -0.641 -0.042 -0.038  0.487
# ch_g:__MALE  0.447 -0.045 -0.679 -0.740  0.030  0.028
# AMC:_:__MAL -0.044  0.497  0.029  0.030 -0.667 -0.776 -0.005
# And on CDS?
agg.totals.indiv.cds <-	xdsall.t2 %>%
filter(label_m == "CDS") %>%
filter(adu_gender_m != "NMJ") %>%
group_by(AgeMonths, adu_gender_m, chi_gender, ID, Corpus) %>%
summarise(sp.total = n()) %>%
arrange(AgeMonths, adu_gender_m, chi_gender, ID, Corpus) %>%
filter(ID != "B-30") %>% # outlier > mean+3sd
as.data.table()
agg.totals.indiv.cds[, chig2 := factor(chi_gender, labels=c("Girl", "Boy"))]
agg.totals.indiv.cds[, adug2 := factor(adu_gender_m, labels=c("Woman", "Man"))]
# Summary table too big to show here, so plotted instead:
# see indiv-raw-num-tokens-CDS.png
indivs.effects.agg.cds <- ggplot(agg.totals.indiv.cds,
aes(x=AgeMonths, y=sp.total)) +
geom_smooth(method="lm", se=T,
aes(color=factor(adug2), fill = factor(adug2)), show.legend=F) +
geom_point(aes(color=factor(adug2)), size=8) +
facet_grid(. ~ chig2) +
scale_fill_manual(
values=c("maroon", "mediumblue")) +
scale_color_manual(
values=c("maroon", "mediumblue")) +
ylim(0,500) + xlim(0,20) +
labs(x = "Age (months)", y = "N tokens CDS\n",
color = "Adult speaker") +
guides(colour = guide_legend(order =1, override.aes = list(size=10)),
fill = F) +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.1, 0.8))
png(paste(plot.path, "indiv-raw-num-tokens-CDS-agg.png", sep=""),
width=1400, height=400,units="px", bg = "transparent")
print(indivs.effects.agg.cds)
dev.off()
# Now one with a smaller y-axis
indivs.effects.agg.cds.miniy <- ggplot(agg.totals.indiv.cds,
aes(x=AgeMonths, y=sp.total)) +
geom_smooth(method="lm", se=T,
aes(color=factor(adug2), fill = factor(adug2)), show.legend=F) +
geom_point(aes(color=factor(adug2)), size=8) +
facet_grid(. ~ chig2) +
scale_fill_manual(
values=c("maroon", "mediumblue")) +
scale_color_manual(
values=c("maroon", "mediumblue")) +
ylim(0,300) + xlim(0,20) +
labs(x = "Age (months)", y = "N tokens CDS\n",
color = "Adult speaker") +
guides(colour = guide_legend(order =1, override.aes = list(size=10)),
fill = F) +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.1, 0.8))
png(paste(plot.path, "indiv-raw-num-tokens-CDS-agg-small-y.png", sep=""),
width=1400, height=400,units="px", bg = "transparent")
print(indivs.effects.agg.cds.miniy)
dev.off()
# Model of all speech:
agg.totals.indiv.cds.2 <-	agg.totals.indiv.cds %>%
mutate(AgeMonthsC = round(AgeMonths-mean(AgeMonths), 2)) %>%
as.data.table()
sp.quant.agg.cds <-	lmer(sp.total ~ AgeMonthsC * chi_gender * adu_gender_m +
(1|Corpus/ID), data=agg.totals.indiv.cds.2)
# Should I somehow normalize the total speech tokens?
# Residuals are not great... should try to improve on future iterations
#resid(sp.quant.agg.cds)
#plot(density(resid(sp.quant.agg.cds)))
#qqnorm(resid(sp.quant.agg.cds))
#qqline(resid(sp.quant.agg.cds))
# Output:
# REML criterion at convergence: 1119.8
# Scaled residuals:
# Min      1Q  Median      3Q     Max
# -1.7068 -0.5689 -0.2378  0.3981  4.3812
# Random effects:
# Groups    Name        Variance Std.Dev.
# ID:Corpus (Intercept)    0      0.00
# Corpus    (Intercept)    0      0.00
# Residual              2614     51.12
# Number of obs: 109, groups:  ID:Corpus, 60; Corpus, 4
# Fixed effects:
# Estimate Std. Error t value
# (Intercept)                                 75.6863     9.6838   7.816
# AgeMonthsC                                  -0.6361     2.2362  -0.284
# chi_gendermale                               4.5141    13.3469   0.338
# adu_gender_mMALE                           -46.6521    14.5914  -3.197
# AgeMonthsC:chi_gendermale                   -2.6378     2.9630  -0.890
# AgeMonthsC:adu_gender_mMALE                 -0.1457     3.4485  -0.042
# chi_gendermale:adu_gender_mMALE              1.9347    19.7765   0.098
# AgeMonthsC:chi_gendermale:adu_gender_mMALE  -0.6082     4.4339  -0.137
# Correlation of Fixed Effects:
# (Intr) AgMntC ch_gnd a__MAL AgMC:_ AMC:__ c_:__M
# AgeMonthsC  -0.068
# chi_gendrml -0.726  0.049
# ad_gnd_MALE -0.664  0.045  0.482
# AgMnthsC:c_  0.051 -0.755 -0.026 -0.034
# AgMC:__MALE  0.044 -0.648 -0.032 -0.059  0.489
# ch_g:__MALE  0.490 -0.033 -0.675 -0.738  0.018  0.044
# AMC:_:__MAL -0.034  0.504  0.017  0.046 -0.668 -0.778 -0.013
### Other stuff below...
#----------------------------------------------------------------------
# Is CDS more likely vs. ADS when CHN is detected?
# Let's only use conversational blocks with 2-100 clips.
# Note: we don't have data here on the reliability of these
# CHN segments (i.e., we don't know how many are really JUNK)
xdsall.t2 <- as.data.table(xdsall.t2) #elika: i'll just keep doing this don't mind me
xdsall.t2[, CHNdetected := ifelse(lena_id == "CHN",1,0)]
clips.by.block <- xdsall.t2 %>%
group_by(uniq_block) %>%
summarise(num_blk_clips = n())
# Add total # clips per block into the main data table
xdsall.t2 <-		xdsall.t2 %>%
left_join(clips.by.block, by = "uniq_block")
CHN.by.block <- xdsall.t2 %>%
group_by(uniq_block) %>%
summarise(ublockCHNs = sum(CHNdetected))
N.nonjunkXDSbyblock <-	xdsall.t2 %>%
filter(label_m == "CDS" |label_m == "ADS") %>%
filter(adu_gender_m != "NMJ") %>%
filter(num_blk_clips > 1 &
num_blk_clips < 101) %>%
group_by(uniq_block) %>%
summarise(xds.total = n())
XDSbyCHN <-	xdsall.t2 %>%
filter(label_m == "CDS" |label_m == "ADS") %>%
filter(adu_gender_m != "NMJ") %>%
filter(num_blk_clips > 1 &
num_blk_clips < 101) %>%
group_by(uniq_block, label_m) %>%
summarise(labelm.total = n()) %>%
left_join(N.nonjunkXDSbyblock, by = "uniq_block") %>%
mutate(mean.lab = labelm.total / xds.total) %>%
filter(label_m == "CDS") %>%
left_join(CHN.by.block, by = "uniq_block")
# Summary table too big to show here, so plotted instead:
# see CDS-by-CHN.png
CHN.effects <- ggplot(XDSbyCHN,
aes(x=ublockCHNs, y=mean.lab)) +
geom_smooth(method="lm", se=FALSE, color="red") +
geom_point(aes(size=xds.total)) +
ylim(0,1) + xlim(0,50) +
scale_size(range = c(3, 10)) +
labs(x = "# target child voc'ns in block", y = "Proportion CDS\n",
size="Total utts\n(ADS + CDS)\nin block") +
basic.theme + theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
png(paste(plot.path, "CDS-by-CHN.png", sep=""),
width=1000, height=400,units="px", bg = "transparent")
print(CHN.effects)
dev.off()
#
#-- Discussion --------------------------------------------------------
#   MC-comment:	It's hard to straightforwardly interpret this since:
#				1 - the CHN clips aren't verified
#				2 - CDS / (CDS+ADS) is hitting ceiling across the x
#				3 - there seems to be this ceiling stuff + some other
#					kind of block type in which the proport CDS varies
#					more. I'm not sure what underlies this variation.
#
#				So maybe this isn't so useful, at least summarized this
#				way. It seems like a binary version of "CHN or not"
#				won't do us much good either. What's another quick way
#				we could look at possible effects of increased CDS due
#				to contingent response on child vocalizations?
#   Elika: i guess we could look at block *length*, parsing the time column
#       on the underscore to be onset/offset in ms...but blocks are
#       already predefined by lena to have exchange within xx ms, right?
#       also not sure this one is helpful. pulling out anything where the
#       kid us under a year might clean this up some (my lexical bias)
#----------------------------------------------------------------------
##### Tier 2 questions (not checked) #####
# Was CDS more/less likely in blocks where MAN and FAN were detected,
# than either one alone?
# Was JUNK more/less likely in blocks were multiple instances of FAN/MAN
# were detected?
# Do the age/gender/age*gender effects seen above hold in each dataset?
# Were there overall differences between datasets?
# Were any of the datasets more "JUNK"-y than the others?
