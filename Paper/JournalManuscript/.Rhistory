# if there is no male speech for child Z01 we can't analyze proportion
# CDS for male speakers in Z01's environment.
nocds <- filter(propCDS.agd, ads.sec + cds.sec == 0)
# Consistent with the analyses of CDS and ADS MinPH,
# female speech is verified for all children and male speech
# is verified for 53 of the children, so we remove the 8 male-speech
# cells that can't be verified from our analysis of proportion CDS
propCDS.agd <- filter(propCDS.agd, ads.sec + cds.sec > 0)
block.agd.combos <-  tibble(adu_gender_m = as.factor(
sort(rep(c("FEMALE", "MALE"), nrow(blockdata)))),
uniq_block = c(blockdata$uniq_block,
blockdata$uniq_block))
secADS.agd <-  modeldata.excl %>%
filter(label_m == "ADS") %>%
group_by(ID, adu_gender_m) %>%
summarise(ads.sec = sum(utt_dur)/1000)
secCDS.agd <-  modeldata.excl %>%
filter(label_m == "CDS") %>%
group_by(ID, adu_gender_m) %>%
summarise(cds.sec = sum(utt_dur)/1000)
propCDS.agd <-  secADS.agd %>%
full_join(secCDS.agd, by = c("ID", "adu_gender_m")) %>%
right_join(ID.agd.combos, by = c("ID", "adu_gender_m")) %>%
replace_na(list(ads.sec = 0, cds.sec = 0)) %>%
mutate(prp.cds = cds.sec / (ads.sec + cds.sec)) %>%
replace_na(list(prp.cds = 0)) %>%
right_join(IDS_demo_update, by = "ID") %>%
mutate(agem.c = AgeMonths - mean(IDS_demo_update$AgeMonths),
age.bin = ifelse(AgeMonths < 12, 0, 1),
age.qrt = findInterval(AgeMonths, c(0,6,12,18)),
prp.cds.lg = log(prp.cds+1))
# Exclude cases in which there is no speech male/female speakers, e.g.,
# if there is no male speech for child Z01 we can't analyze proportion
# CDS for male speakers in Z01's environment.
nocds <- filter(propCDS.agd, ads.sec + cds.sec == 0)
# Consistent with the analyses of CDS and ADS MinPH,
# female speech is verified for all children and male speech
# is verified for 53 of the children, so we remove the 8 male-speech
# cells that can't be verified from our analysis of proportion CDS
head(propCDS.agd)
head(propCDS.agd)
nocds
subset(propCDS.agd, ID == "M-104")
subset(propCDS.agd, ID == "M-104")$prp.cds
secADS <-  modeldata.excl %>%
filter(label_m == "ADS") %>%
group_by(ID) %>%
summarise(ads.sec = sum(utt_dur)/1000)
secCDS <-  modeldata.excl %>%
filter(label_m == "CDS") %>%
group_by(ID) %>%
summarise(cds.sec = sum(utt_dur)/1000)
propCDS <-  secADS %>%
right_join(secCDS, by = "ID") %>%
replace_na(list(ads.sec = 0, cds.sec = 0)) %>%
mutate(prp.cds = cds.sec / (ads.sec + cds.sec)) %>%
replace_na(list(prp.cds = 0)) %>%
right_join(IDS_demo_update, by = "ID") %>%
mutate(agem.c = AgeMonths - mean(IDS_demo_update$AgeMonths),
age.bin = ifelse(AgeMonths < 12, 0, 1),
age.qrt = findInterval(AgeMonths, c(0,6,12,18)),
prp.cds.lg = log(prp.cds+1))
# Now, in order to also estimate speaker gender effects on propCDS...
# Create a matrix of adultgender-childID combinations to ensure we include
# cases with no ADS/CDS for a male/female speaker for each child
block.agd.combos <-  tibble(adu_gender_m = as.factor(
sort(rep(c("FEMALE", "MALE"), nrow(blockdata)))),
uniq_block = c(blockdata$uniq_block,
blockdata$uniq_block))
secADS.agd <-  modeldata.excl %>%
filter(label_m == "ADS") %>%
group_by(ID, adu_gender_m) %>%
summarise(ads.sec = sum(utt_dur)/1000)
secCDS.agd <-  modeldata.excl %>%
filter(label_m == "CDS") %>%
group_by(ID, adu_gender_m) %>%
summarise(cds.sec = sum(utt_dur)/1000)
propCDS.agd <-  secADS.agd %>%
full_join(secCDS.agd, by = c("ID", "adu_gender_m")) %>%
right_join(ID.agd.combos, by = c("ID", "adu_gender_m")) %>%
replace_na(list(ads.sec = 0, cds.sec = 0)) %>%
mutate(prp.cds = cds.sec / (ads.sec + cds.sec)) %>%
replace_na(list(prp.cds = 0)) %>%
right_join(IDS_demo_update, by = "ID") %>%
mutate(agem.c = AgeMonths - mean(IDS_demo_update$AgeMonths),
age.bin = ifelse(AgeMonths < 12, 0, 1),
age.qrt = findInterval(AgeMonths, c(0,6,12,18)),
prp.cds.lg = log(prp.cds+1))
# Exclude cases in which there is no speech male/female speakers, e.g.,
# if there is no male speech for child Z01 we can't analyze proportion
# CDS for male speakers in Z01's environment.
nocds <- filter(propCDS.agd, ads.sec + cds.sec == 0)
# Consistent with the analyses of CDS and ADS MinPH,
# female speech is verified for all children and male speech
# is verified for 53 of the children, so we remove the 8 male-speech
# cells that can't be verified from our analysis of proportion CDS
propCDS.agd.sub <- filter(propCDS.agd, ads.sec + cds.sec > 0)
cds.prp.agd.bas <-  lmer(prp.cds ~ (1|Corpus) + (1|ID), data = propCDS.agd)
cds.prp.agd.age <-  lmer(prp.cds ~ agem.c +
(1|Corpus) + (1|ID), data = propCDS.agd)
# effect of child age
anova(cds.prp.agd.bas, cds.prp.agd.age)
cds.prp.agd.cgd <-  lmer(prp.cds ~ chi_gender +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.bas, cds.prp.agd.cgd)
# no improvement
cds.prp.agd.agd <-  lmer(prp.cds ~ adu_gender_m +
(1|Corpus) + (1|ID), data = propCDS.agd)
# effect of speaker gender
anova(cds.prp.agd.bas, cds.prp.agd.agd)
# improved over previous model
cds.prp.agd.med <-  lmer(prp.cds ~ mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.bas, cds.prp.agd.med)
# no improvement
cds.prp.agd.myr <-  lmer(prp.cds ~ mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.bas, cds.prp.agd.myr)
# no improvement
cds.prp.agd.nsb <-  lmer(prp.cds ~ number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.bas, cds.prp.agd.nsb)
# no improvement
# Add both significant single predictors into a model for
# comparison with additional 2-way and 3-way effects
cds.prp.agd.age.agd <-  lmer(prp.cds ~ agem.c + adu_gender_m +
(1|Corpus) + (1|ID), data = propCDS.agd)
cds.prp.agd.age.agd.agecgd <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:chi_gender +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agecgd)
# no improvement
cds.prp.agd.age.agd.ageagd <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.ageagd)
# no improvement
summary(cds.prp.agd.age.agd.ageagd)
cds.prp.agd.age.agd.agemed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agemed)
# no improvement
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.ageagd)
cds.prp.agd.age.agd.agemyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agemyr)
# no improvement
cds.prp.agd.age.agd.agensb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agensb)
# no improvement
cds.prp.agd.age.agd.cgdagd <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:adu_gender_m +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdagd)
# no improvement
cds.prp.agd.age.agd.cgdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdmed)
# no improvement
cds.prp.agd.age.agd.cgdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdmyr)
# no improvement
cds.prp.agd.age.agd.cgdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdnsb)
# no improvement
cds.prp.agd.age.agd.agdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
adu_gender_m:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agdmed)
# no improvement
cds.prp.agd.age.agd.agdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
adu_gender_m:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agdmyr)
# no improvement
cds.prp.agd.age.agd.agdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
adu_gender_m:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agdnsb)
# no improvement
# No model with mat_ed_num3:mother_dob because they are correlated
cds.prp.agd.age.agd.mednsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
mat_ed_num3:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.mednsb)
# no improvement
cds.prp.agd.age.agd.agecgdagd <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:chi_gender:adu_gender_m +
(1|Corpus) + (1|ID), data = propCDS.agd)
# model is rank deficient
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agecgdagd)
# no improvement
cds.prp.agd.age.agd.agecgdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:chi_gender:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agecgdmed)
# no improvement
cds.prp.agd.age.agd.agecgdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:chi_gender:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agecgdmyr)
# no improvement
cds.prp.agd.age.agd.agecgdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:chi_gender:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agecgdnsb)
# no improvement
cds.prp.agd.age.agd.ageagdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.ageagdmed)
# no improvement
cds.prp.agd.age.agd.ageagdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.ageagdmyr)
# no improvement
summary(cds.prp.agd.age.agd.ageagdmyr)
cds.prp.agd.age.agd.ageagdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.ageagdnsb)
# no improvement
cds.prp.agd.age.agd.agemednsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:mat_ed_num3:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agemednsb)
# no improvement
cds.prp.agd.age.agd.cgdagdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:adu_gender_m:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdagdmed)
# no improvement
cds.prp.agd.age.agd.cgdagdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:adu_gender_m:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdagdmyr)
# no improvement
cds.prp.agd.age.agd.cgdagdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:adu_gender_m:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdagdnsb)
# no improvement
cds.prp.agd.age.agd.cgdmednsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:mat_ed_num3:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.cgdmednsb)
# no improvement
cds.prp.agd.age.agd.agdmednsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
adu_gender_m:mat_ed_num3:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd, cds.prp.agd.age.agd.agdmednsb)
# no improvement
cds.prp.agd.age.agd.ageagd.agecgdagd <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:chi_gender:adu_gender_m +
(1|Corpus) + (1|ID), data = propCDS.agd)
# model is rank deficient
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.agecgdagd)
# no improvement
cds.prp.agd.age.agd.ageagd.agecgdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:chi_gender:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.agecgdmed)
# no improvement
cds.prp.agd.age.agd.ageagd.agecgdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:chi_gender:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.agecgdmyr)
# no improvement
cds.prp.agd.age.agd.ageagd.agecgdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:chi_gender:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.agecgdnsb)
# no improvement
cds.prp.agd.age.agd.ageagd.ageagdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:adu_gender_m:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.ageagdmed)
cds.prp.agd.age.agd.ageagd.ageagdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:adu_gender_m:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
# effect of speaker gender and marginal effect of child age
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.ageagdmyr)
cds.prp.agd.age.agd.ageagd.ageagdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:adu_gender_m:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.ageagdnsb)
# no improvement
cds.prp.agd.age.agd.ageagd.agemednsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
agem.c:mat_ed_num3:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.agemednsb)
# no improvement
cds.prp.agd.age.agd.ageagd.cgdagdmed <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
chi_gender:adu_gender_m:mat_ed_num3 +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.cgdagdmed)
# no improvement
cds.prp.agd.age.agd.ageagd.cgdagdmyr <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
chi_gender:adu_gender_m:mother_dob +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.cgdagdmyr)
# no improvement
cds.prp.agd.age.agd.ageagd.cgdagdnsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
chi_gender:adu_gender_m:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.cgdagdnsb)
# no improvement
ccds.prp.agd.age.agd.ageagd.cgdmednsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
chi_gender:mat_ed_num3:number_older_sibs +
agem.c:adu_gender_m +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.cgdmednsb)
# no improvement
cds.prp.agd.age.agd.ageagd.agdmednsb <-  lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
adu_gender_m:mat_ed_num3:number_older_sibs +
(1|Corpus) + (1|ID), data = propCDS.agd)
anova(cds.prp.agd.age.agd.ageagd, cds.prp.agd.age.agd.agdmednsb)
# no improvement
cds.prp.agd.age.agd.ageagd
cds.prp.agd.best <- lmer(prp.cds ~ agem.c + adu_gender_m +
agem.c:adu_gender_m +
(1|Corpus) + (1|ID),
data = propCDS.agd)
# Proportion CDS (focus) ####
# We next model proportion of CDS (in seconds),
# which requires us to make more summaries
secADS <-  modeldata.excl %>%
filter(label_m == "ADS") %>%
group_by(ID) %>%
summarise(ads.sec = sum(utt_dur)/1000)
secCDS <-  modeldata.excl %>%
filter(label_m == "CDS") %>%
group_by(ID) %>%
summarise(cds.sec = sum(utt_dur)/1000)
propCDS <-  secADS %>%
right_join(secCDS, by = "ID") %>%
replace_na(list(ads.sec = 0, cds.sec = 0)) %>%
mutate(prp.cds = cds.sec / (ads.sec + cds.sec)) %>%
replace_na(list(prp.cds = 0)) %>%
right_join(IDS_demo_update, by = "ID") %>%
mutate(agem.c = AgeMonths - mean(IDS_demo_update$AgeMonths),
age.bin = ifelse(AgeMonths < 12, 0, 1),
age.qrt = findInterval(AgeMonths, c(0,6,12,18)),
prp.cds.lg = log(prp.cds+1))
# Now, in order to also estimate speaker gender effects on propCDS...
# Create a matrix of adultgender-childID combinations to ensure we include
# cases with no ADS/CDS for a male/female speaker for each child
block.agd.combos <-  tibble(adu_gender_m = as.factor(
sort(rep(c("FEMALE", "MALE"), nrow(blockdata)))),
uniq_block = c(blockdata$uniq_block,
blockdata$uniq_block))
secADS.agd <-  modeldata.excl %>%
filter(label_m == "ADS") %>%
group_by(ID, adu_gender_m) %>%
summarise(ads.sec = sum(utt_dur)/1000)
secCDS.agd <-  modeldata.excl %>%
filter(label_m == "CDS") %>%
group_by(ID, adu_gender_m) %>%
summarise(cds.sec = sum(utt_dur)/1000)
propCDS.agd <-  secADS.agd %>%
full_join(secCDS.agd, by = c("ID", "adu_gender_m")) %>%
right_join(ID.agd.combos, by = c("ID", "adu_gender_m")) %>%
replace_na(list(ads.sec = 0, cds.sec = 0)) %>%
mutate(prp.cds = cds.sec / (ads.sec + cds.sec)) %>%
replace_na(list(prp.cds = 0)) %>%
right_join(IDS_demo_update, by = "ID") %>%
mutate(agem.c = AgeMonths - mean(IDS_demo_update$AgeMonths),
age.bin = ifelse(AgeMonths < 12, 0, 1),
age.qrt = findInterval(AgeMonths, c(0,6,12,18)),
prp.cds.lg = log(prp.cds+1))
# Exclude cases in which there is no speech male/female speakers, e.g.,
# if there is no male speech for child Z01 we can't analyze proportion
# CDS for male speakers in Z01's environment.
nocds <- filter(propCDS.agd, ads.sec + cds.sec == 0)
# Consistent with the analyses of CDS and ADS MinPH,
# female speech is verified for all children and male speech
# is verified for 53 of the children, so we remove the 8 male-speech
# cells that can't be verified from our analysis of proportion CDS
propCDS.agd.sub <- filter(propCDS.agd, ads.sec + cds.sec > 0)
source(paste0(scripts, models, "MOD-CDS-Prop.R"))
# which requires us to make more summaries
secADS <-  modeldata.excl %>%
filter(label_m == "ADS") %>%
group_by(ID) %>%
summarise(ads.sec = sum(utt_dur)/1000)
secCDS <-  modeldata.excl %>%
filter(label_m == "CDS") %>%
group_by(ID) %>%
summarise(cds.sec = sum(utt_dur)/1000)
propCDS <-  secADS %>%
right_join(secCDS, by = "ID") %>%
replace_na(list(ads.sec = 0, cds.sec = 0)) %>%
mutate(prp.cds = cds.sec / (ads.sec + cds.sec)) %>%
replace_na(list(prp.cds = 0)) %>%
right_join(IDS_demo_update, by = "ID") %>%
mutate(agem.c = AgeMonths - mean(IDS_demo_update$AgeMonths),
age.bin = ifelse(AgeMonths < 12, 0, 1),
age.qrt = findInterval(AgeMonths, c(0,6,12,18)),
prp.cds.lg = log(prp.cds+1))
# Now, in order to also estimate speaker gender effects on propCDS...
# Create a matrix of adultgender-childID combinations to ensure we include
# cases with no ADS/CDS for a male/female speaker for each child
block.agd.combos <-  tibble(adu_gender_m = as.factor(
sort(rep(c("FEMALE", "MALE"), nrow(blockdata)))),
uniq_block = c(blockdata$uniq_block,
blockdata$uniq_block))
secADS.agd <-  modeldata.excl %>%
filter(label_m == "ADS") %>%
group_by(ID, adu_gender_m) %>%
summarise(ads.sec = sum(utt_dur)/1000)
secCDS.agd <-  modeldata.excl %>%
filter(label_m == "CDS") %>%
group_by(ID, adu_gender_m) %>%
summarise(cds.sec = sum(utt_dur)/1000)
propCDS.agd <-  secADS.agd %>%
full_join(secCDS.agd, by = c("ID", "adu_gender_m")) %>%
right_join(ID.agd.combos, by = c("ID", "adu_gender_m")) %>%
replace_na(list(ads.sec = 0, cds.sec = 0)) %>%
mutate(prp.cds = cds.sec / (ads.sec + cds.sec)) %>%
replace_na(list(prp.cds = 0)) %>%
right_join(IDS_demo_update, by = "ID") %>%
mutate(agem.c = AgeMonths - mean(IDS_demo_update$AgeMonths),
age.bin = ifelse(AgeMonths < 12, 0, 1),
age.qrt = findInterval(AgeMonths, c(0,6,12,18)),
prp.cds.lg = log(prp.cds+1))
# Exclude cases in which there is no speech male/female speakers, e.g.,
# if there is no male speech for child Z01 we can't analyze proportion
# CDS for male speakers in Z01's environment.
nocds <- filter(propCDS.agd, ads.sec + cds.sec == 0)
# Consistent with the analyses of CDS and ADS MinPH,
# female speech is verified for all children and male speech
# is verified for 53 of the children, so we remove the 8 male-speech
# cells that can't be verified from our analysis of proportion CDS
propCDS.agd.sub <- filter(propCDS.agd, ads.sec + cds.sec > 0)
# Incrementally build best models of proportion CDS
# Primary models
source(paste0(scripts, models, "MOD-CDS-Prop.R"))
source(paste0(scripts, models, "MOD-CDS-Prop-MvsF.R"))
CDS.prp.mdl <- tidy(cds.prp.best)
CDS.prp.mdl
# Proportion CDS, split by speaker gender
CDS.prp.mdl.agd <- tidy(cds.prp.agd.s.best)
CDS.prp.mdl.agd
# Proportion CDS, separate models by speaker gender
CDS.prp.mdl.agd.s.F <- tidy(fcd.prp.best)
CDS.prp.mdl.agd.s.F
CDS.prp.mdl.agd.s.M <- tidy(mcd.prp.best)
CDS.prp.mdl.agd.s.M
cds.prp.agd.best.parallel <- lmer(prp.cds ~ agem.c + adu_gender_m +
(1|Corpus) + (1|ID),
data = propCDS.agd)
summary(cds.prp.agd.best)
summary(cds.prp.agd.s.best)
################################################################################
# PREAMBLE ####
rm(list=ls())
# Working dir, relative paths, and custom functions and
# settings are stored in the helper file
source("_helper-XDS-DARCLE.R")
# NB for the input files:
#  csv and tsv will try to save without leading zero in aclew_id
#  if you open in excel; always save .xlsx as .csv to avoid this
# SETTINGS
printfigs <- "Y" # Set to anything but "Y" to stop the figures from printing
BW <- "Y" # Set to anything but "Y" for color figures
OL.thresh <- 3 # SD*N threshold for excluding outliers
corpuscolors <- c("firebrick1", "gold1", "forestgreen", "dodgerblue1")
corpuslabels <- c("Bergelson", "McDivitt", "VanDam", "Warlaumont")
agdcolors <- c("maroon", "mediumblue")
agdcolors.bu <- c("chartreuse3", "blue2")
agdcolors.bu.gsc <- c("gray15", "gray65")
agdlabels <- c("Woman  ", "Man  ")
agecutlabels <- c("<12mo.", ">12mo.")
#medcolors <- c("gray70", "gray50", "gray20")
medcolors <- c("#E495A5", "#ABB065", "#39BEB1")
medlabels <- c("No BA  ", "BA  ", "AD")
cgdcolors <- c("purple", "yellow")
cgdlabels <- c("girl", "boy")
d <- read_csv("input/idslabel_times.csv")
ls
head(d)
data <- d %>% mutate(timehr = time/(1000*60*60))
head(data)
nrow(data)
range(data$timehr)
mean(data$timehr)
median(data$timehr)
ggplot(data, aes(x=timehr)) + geom_histogram()
subset(data, timehr < 8)
subset(data, timehr < 9)
